[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts =
    --verbose
    --strict-markers
    --cov=src
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --tb=short
    -ra

# Test markers for categorization
markers =
    unit: Unit tests - fast, isolated tests of individual functions/classes
    integration: Integration tests - tests that involve multiple components
    slow: Tests that take more than 5 seconds to complete
    preprocessing: Tests for data preprocessing functionality
    fairness: Tests for fairness metrics and bias detection
    models: Tests for model architecture and training
    pipeline: Tests for end-to-end training/evaluation pipelines
    requires_gpu: Tests that require GPU availability
    requires_data: Tests that require external dataset files

# Coverage options
[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*
    */dist-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    class .*\bProtocol\):
    @overload

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov
